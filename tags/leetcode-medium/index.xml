<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode-Medium on Cuckooemm&#39;s Blog</title>
    <link>https://cuckooemm.xyz/tags/leetcode-medium/</link>
    <description>Recent content in LeetCode-Medium on Cuckooemm&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 09 Jul 2019 22:22:41 +0800</lastBuildDate>
    
	<atom:link href="https://cuckooemm.xyz/tags/leetcode-medium/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetcode - 40 - Combination Sum II [Medium]</title>
      <link>https://cuckooemm.xyz/2019/july/40-combination-sum-ii/</link>
      <pubDate>Tue, 09 Jul 2019 22:22:41 +0800</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/july/40-combination-sum-ii/</guid>
      <description>40.Combination Sum II 地址
难度：Medium
题目描述 Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.
Each number in candidates may only be used once in the combination.
给定一个数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。
candidates 中的每个数字在每个组合中只能使用一次。
Note:  All numbers (including target) will be positive integers. The solution set must not contain duplicate combinations.</description>
    </item>
    
    <item>
      <title>Leetcode - 39 - Combination Sum [Medium]</title>
      <link>https://cuckooemm.xyz/2019/july/39-combination-sum/</link>
      <pubDate>Tue, 09 Jul 2019 16:25:26 +0800</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/july/39-combination-sum/</guid>
      <description>39.Combination Sum 地址
难度：Medium
题目描述 Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.
The same repeated number may be chosen from candidates unlimited number of times.
给定一个无重复元素的数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。
candidates 中的数字可以无限制重复被选取。
Note:  All numbers (including target) will be positive integers. The solution set must not contain duplicate combinations.</description>
    </item>
    
    <item>
      <title>Leetcode - 36 - Valid Sudoku [Medium]</title>
      <link>https://cuckooemm.xyz/2019/july/36-valid-sudoku/</link>
      <pubDate>Sun, 07 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/july/36-valid-sudoku/</guid>
      <description>36.Valid Sudoku 地址
难度：Medium
题目描述 Determine if a 9x9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:
1.Each row must contain the digits 1-9 without repetition.
2.Each column must contain the digits 1-9 without repetition.
3.Each of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repetition.
The Sudoku board could be partially filled, where empty cells are filled with the character &amp;lsquo;.</description>
    </item>
    
    <item>
      <title>Leetcode - 33 - Search in Rotated Sorted Array [Medium]</title>
      <link>https://cuckooemm.xyz/2019/july/33-search-in-rotated-sorted-array/</link>
      <pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/july/33-search-in-rotated-sorted-array/</guid>
      <description>33.Search in Rotated Sorted Array 地址
难度：Medium
题目描述 Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.
(i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).
You are given a target value to search. If found in the array return its index, otherwise return -1.
You may assume no duplicate exists in the array.
Your algorithm&amp;rsquo;s runtime complexity must be in the order of O(log n).</description>
    </item>
    
    <item>
      <title>Leetcode - 34 - Find First and Last Position of Element in Sorted Array [Medium]</title>
      <link>https://cuckooemm.xyz/2019/july/34-find-first-and-last-position-of-element-in-sorted-array/</link>
      <pubDate>Sat, 06 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/july/34-find-first-and-last-position-of-element-in-sorted-array/</guid>
      <description>34.Find First and Last Position of Element in Sorted Array 地址
难度：Medium
题目描述 Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.
Your algorithm&amp;rsquo;s runtime complexity must be in the order of O(log n).
If the target is not found in the array, return [-1, -1].
给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。
你的算法时间复杂度必须是 O(log n) 级别。
如果数组中不存在目标值，返回 [-1, -1]。
示例 Example 1: Input: nums = [5,7,7,8,8,10], target = 8</description>
    </item>
    
    <item>
      <title>Leetcode - 29 - Divide Two Integers [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/29-divide-two-integers/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/29-divide-two-integers/</guid>
      <description>29.Divide Two Integers 地址
难度：Medium
题目描述 Given two integers dividend and divisor, divide two integers without using multiplication, division and mod operator.
Return the quotient after dividing dividend by divisor.
The integer division should truncate toward zero.
给定两个整数，被除数 dividend 和除数 divisor。将两数相除，要求不使用乘法、除法和 mod 运算符。
返回被除数 dividend 除以除数 divisor 得到的商。
示例 Example 1: Input: dividend = 10, divisor = 3
Output: 3
Example 2: Input: dividend = 7, divisor = -3</description>
    </item>
    
    <item>
      <title>Leetcode - 31 - Next Permutation [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/31-next-permutation/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/31-next-permutation/</guid>
      <description>31.Next Permutation 地址
难度：Medium
题目描述 Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers.
If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).
The replacement must be in-place and use only constant extra memory.
Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.</description>
    </item>
    
    <item>
      <title>LeetCode - 24 - Swap Nodes in Pairs [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/24-swap-nodes-in-pairs/</link>
      <pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/24-swap-nodes-in-pairs/</guid>
      <description>24.Swap Nodes in Pairs 地址
难度：Medium
题目描述 Given a linked list, swap every two adjacent nodes and return its head.
You may not modify the values in the list&amp;rsquo;s nodes, only nodes itself may be changed.
给定一个链表，两两交换其中相邻的节点，并返回交换后的链表。
你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。
示例 Example: Given 1-&amp;gt;2-&amp;gt;3-&amp;gt;4, you should return the list as 2-&amp;gt;1-&amp;gt;4-&amp;gt;3.
思路 交换指针。
时间复杂度:O(n), 空间复杂度：O(1)。
AC  Runtime: 0 ms, faster than 100.00% of C++ online submissions for Swap Nodes in Pairs.</description>
    </item>
    
    <item>
      <title>LeetCode - 17 - Letter Combinations of a Phone Number [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/17-letter-combinations-of-a-phone-number/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/17-letter-combinations-of-a-phone-number/</guid>
      <description>17.Letter Combinations of a Phone Number 地址
难度：Medium
题目描述 Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.
A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.
给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。
给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。
示例 Example: Input: &amp;ldquo;23&amp;rdquo;
Output: [&amp;ldquo;ad&amp;rdquo;, &amp;ldquo;ae&amp;rdquo;, &amp;ldquo;af&amp;rdquo;, &amp;ldquo;bd&amp;rdquo;, &amp;ldquo;be&amp;rdquo;, &amp;ldquo;bf&amp;rdquo;, &amp;ldquo;cd&amp;rdquo;, &amp;ldquo;ce&amp;rdquo;, &amp;ldquo;cf&amp;rdquo;].</description>
    </item>
    
    <item>
      <title>LeetCode - 19 - Remove Nth Node From End of List [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/19-remove-nth-node-from-end-of-list/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/19-remove-nth-node-from-end-of-list/</guid>
      <description>19.Remove Nth Node From End of List 地址
难度：Medium
题目描述 Given a linked list, remove the n-th node from the end of list and return its head.
给定一个链表，删除链表的倒数第 n 个节点，并且返回链表的头结点。
示例 Example: Given linked list: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5, and n = 2.
After removing the second node from the end, the linked list becomes 1-&amp;gt;2-&amp;gt;3-&amp;gt;5.
Note: Given n will always be valid.
Follow up: Could you do this in one pass?</description>
    </item>
    
    <item>
      <title>LeetCode - 22 - Generate_Parentheses [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/22-generate-parentheses/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/22-generate-parentheses/</guid>
      <description>22.Generate_Parentheses 地址
难度：Medium
题目描述 Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
For example, given n = 3, a solution set is:
给出 n 代表生成括号的对数，请你写出一个函数，使其能够生成所有可能的并且有效的括号组合。
示例 例如，给出 n = 3，生成结果为：
[ &amp;quot;((()))&amp;quot;, &amp;quot;(()())&amp;quot;, &amp;quot;(())()&amp;quot;, &amp;quot;()(())&amp;quot;, &amp;quot;()()()&amp;quot; ]  思路 使用递归。
AC  Runtime: 4 ms, faster than 96.72% of C++ online submissions for Generate Parentheses. Memory Usage: 17.5 MB, less than 22.52% of C++ online submissions for Generate Parentheses.</description>
    </item>
    
    <item>
      <title>LeetCode - 11 - Container With Most Water [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/11-container-with-most-water/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/11-container-with-most-water/</guid>
      <description>11.Container With Most Water 地址
难度：Medium
题目描述 Given n non-negative integers a1, a2, &amp;hellip;, an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.
给定 n 个非负整数 a1，a2，&amp;hellip;，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</description>
    </item>
    
    <item>
      <title>LeetCode - 12 - Integer to Roman [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/12-integer-to-roman/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/12-integer-to-roman/</guid>
      <description>12.Integer to Roman 地址
难度：Medium
题目描述 Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。
Symbol Value I 1 V 5 X 10 L 50 C 100 D 500 M 1000  For example, two is written as II in Roman numeral, just two one&amp;rsquo;s added together. Twelve is written as, XII, which is simply X + II.</description>
    </item>
    
    <item>
      <title>LeetCode - 15 - 3Sum [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/15-3sum/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/15-3sum/</guid>
      <description>15.3Sum 地址
难度：Medium
题目描述 Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.
给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？找出所有满足条件且不重复的三元组。
Note: The solution set must not contain duplicate triplets.
答案中不可以包含重复的三元组。
示例 Example: Given array nums = [-1, 0, 1, 2, -1, -4], A solution set is: [ [-1, 0, 1], [-1, -1, 2] ]  思路 首先对数组进行排序，选择一个数，然后用双指针法对比，如果和大于0，左移右指针，反之，右移左指针。 时间复杂度:O(n2), 空间复杂度：O(1)。</description>
    </item>
    
    <item>
      <title>LeetCode - 16 - 3Sum Closest [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/16-3sum-closest/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/16-3sum-closest/</guid>
      <description>16.3Sum Closest 地址
难度：Medium
题目描述 Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the sum of the three integers. You may assume that each input would have exactly one solution.
给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。
示例 Example: Given array nums = [-1, 2, 1, -4], and target = 1.</description>
    </item>
    
    <item>
      <title>LeetCode - 6 - ZigZag Conversion [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/6-zigzag-conversion/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/6-zigzag-conversion/</guid>
      <description>6.ZigZag Conversion 地址
难度：Medium
题目描述 The string &amp;quot;PAYPALISHIRING&amp;quot; is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)
使字符串以给定行数上进行Z字形书写，像下面这样。
P A H N A P L S I I G Y I R  And then read line by line: &amp;quot;PAHNAPLSIIGYIR&amp;quot;
然后一行一行的读。
Write the code that will take a string and make this conversion given a number of rows:</description>
    </item>
    
    <item>
      <title>LeetCode - 8 - String to Integer(atoi) [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/8-string-to-integer-atoi/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/8-string-to-integer-atoi/</guid>
      <description>8.String to Integer(atoi) 地址
难度：Medium
题目描述 Implement atoi which converts a string to an integer.
The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.
The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</description>
    </item>
    
    <item>
      <title>LeetCode - 2 - Add Two Numbers [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/2-add-two-number/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/2-add-two-number/</guid>
      <description>2.Add Two Numbers 地址
难度：Medium
题目描述 You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.
You may assume the two numbers do not contain any leading zero, except the number 0 itself.
给定两个非空链表用来表示两个非负整数，它们各自的位数是按照逆序的方式存储的，并且每个节点只能存储一位数字。用链表返回它们的和。
你可以假设它们都不会以0开头，除了数字0。
示例 Input: (2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt; 4)</description>
    </item>
    
    <item>
      <title>LeetCode - 3 - Longest Substring Without Repeating Characters [Medium]</title>
      <link>https://cuckooemm.xyz/2019/june/3-longest_substring-without-repeating-characters/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/3-longest_substring-without-repeating-characters/</guid>
      <description>3.Longest Substring Without Repeating Characters 地址
难度：Medium
题目描述 Given a string, find the length of the longest substring without repeating characters.
给定一个字符串，找出不含重复字符的最长子串。
示例 Example 1 Input: &amp;ldquo;abcabcbb&amp;rdquo;
Output: 3
Explanation: The answer is &amp;ldquo;abc&amp;rdquo;, with the length of 3.
Example 2 Input: &amp;ldquo;bbbbb&amp;rdquo;
Output: 1
Explanation: The answer is &amp;ldquo;b&amp;rdquo;, with the length of 1.
Example 3 Input: &amp;ldquo;bbbbb&amp;rdquo;
Output: 1
Explanation: The answer is &amp;ldquo;b&amp;rdquo;, with the length of 1.</description>
    </item>
    
  </channel>
</rss>