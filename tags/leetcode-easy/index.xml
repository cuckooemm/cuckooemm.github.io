<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCode-Easy on Cuckooemm&#39;s Blog</title>
    <link>https://cuckooemm.xyz/tags/leetcode-easy/</link>
    <description>Recent content in LeetCode-Easy on Cuckooemm&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 10 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cuckooemm.xyz/tags/leetcode-easy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetcode - 27 - Remove Element [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/27-remove-element/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/27-remove-element/</guid>
      <description>27.Remove Element 地址
难度：Easy
题目描述 Given an array nums and a value val, remove all instances of that value in-place and return the new length.
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
The order of elements can be changed. It doesn&amp;rsquo;t matter what you leave beyond the new length.
给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。</description>
    </item>
    
    <item>
      <title>Leetcode - 26 - Remove Duplicates From Sorted Array [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/26-remove-duplicates-from-sorted-array/</link>
      <pubDate>Sun, 09 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/26-remove-duplicates-from-sorted-array/</guid>
      <description>26.Remove Duplicates From Sorted Array 地址
难度：Easy
题目描述 Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。
示例 Example 1: Given nums = [1,1,2],
Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively.</description>
    </item>
    
    <item>
      <title>LeetCode - 20 - Valid Parentheses [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/20-valid-parentheses/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/20-valid-parentheses/</guid>
      <description>20.Valid Parentheses 地址
难度：Easy
题目描述 Given a string containing just the characters &#39;(&#39;, &#39;)&#39;, &#39;{&#39;, &#39;}&#39;, &#39;[&#39; and &#39;]&#39;, determine if the input string is valid.
An input string is valid if:
 Open brackets must be closed by the same type of brackets. Open brackets must be closed in the correct order.  Note that an empty string is also considered valid.
给定一个只包括 &#39;(&#39;, &#39;)&#39;, &#39;{&#39;, &#39;}&#39;, &#39;[&#39; and &#39;]&#39; 的字符串，判断字符串是否有效。</description>
    </item>
    
    <item>
      <title>LeetCode - 21 - Merge Two Sorted Lists [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/21-merge-two-sorted-lists/</link>
      <pubDate>Wed, 05 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/21-merge-two-sorted-lists/</guid>
      <description>21.Merge Two Sorted Lists 地址
难度：Easy
题目描述 Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.
将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。
示例 Example: Input: 1-&amp;gt;2-&amp;gt;4, 1-&amp;gt;3-&amp;gt;4
Output: 1-&amp;gt;1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;4
思路 比较大小然后修改指针。 时间复杂度:O(n), 空间复杂度：O(1)。
AC  Runtime: 0 ms, faster than 100.00% of C++ online submissions for Merge Two Sorted Lists. Memory Usage: 9 MB, less than 60.</description>
    </item>
    
    <item>
      <title>LeetCode - 13 - Roman to Integer [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/13-roman-to-integer/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/13-roman-to-integer/</guid>
      <description>13.Roman to Integer 地址
难度：Easy
题目描述 Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.
罗马数字包含以下七种字符： I， V， X， L，C，D 和 M。
Symbol Value I 1 V 5 X 10 L 50 C 100 D 500 M 1000  For example, two is written as II in Roman numeral, just two one&amp;rsquo;s added together. Twelve is written as, XII, which is simply X + II.</description>
    </item>
    
    <item>
      <title>LeetCode - 14 - Longest_Common_Prefix [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/14-longest-common-prefix/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/14-longest-common-prefix/</guid>
      <description>14.Longest_Common_Prefix 地址
难度：Easy
题目描述 Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string &amp;ldquo;&amp;rdquo;.
编写一个函数来查找字符串数组中的最长公共前缀。
如果不存在公共前缀，返回空字符串 &amp;ldquo;&amp;ldquo;。
示例 Example 1: Input: [&amp;ldquo;flower&amp;rdquo;,&amp;ldquo;flow&amp;rdquo;,&amp;ldquo;flight&amp;rdquo;]
Output: &amp;ldquo;fl&amp;rdquo;
Example 2: Input: [&amp;ldquo;dog&amp;rdquo;,&amp;ldquo;racecar&amp;rdquo;,&amp;ldquo;car&amp;rdquo;]
Output: &amp;ldquo;&amp;rdquo;
Explanation: There is no common prefix among the input strings.
思路 把第一个元素拷贝，然后依次比较之后的string。
遇到不同则裁剪字符串并跳去循环，开始下一个string。
时间复杂度:O(S), 空间复杂度：O(1)。
AC  Runtime: 4 ms, faster than 98.77% of C++ online submissions for Longest Common Prefix.</description>
    </item>
    
    <item>
      <title>LeetCode - 9 - Palindrome Number [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/9-palindrome-number/</link>
      <pubDate>Mon, 03 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/9-palindrome-number/</guid>
      <description>9.Palindrome Number 地址
难度：Easy
题目描述 Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.
判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。
示例 Example 1: Input: 121
Output: true
Example 2: Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3: Input: 10
Output: false
Explanation: Reads 01 from right to left.</description>
    </item>
    
    <item>
      <title>LeetCode - 7 - Reverse Integer [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/7-reverse-integer/</link>
      <pubDate>Sun, 02 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/7-reverse-integer/</guid>
      <description>7.Reverse Integer 地址
难度：Easy
题目描述 Given a 32-bit signed integer, reverse digits of an integer.
给定一个32位有符号整数，对整数的每位数字进行反转。
示例 Example 1: Input: 123
Output: 321
Example 2: Input: -123
Output: -321
Example 3: Input: 120
Output: 21
Note: Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</description>
    </item>
    
    <item>
      <title>LeetCode - 1 - Two Sum [Easy]</title>
      <link>https://cuckooemm.xyz/2019/june/1-two-sum/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/june/1-two-sum/</guid>
      <description>1.Tow Sum 地址
难度：Easy
题目描述 Given an array of integers, return indices of the two numbers such that they add up to a specific target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
给定一个整型数组，返回数组中值的和target的数组索引，可以假定每个输入都有一个解，且同一个元素不能使用两次。
示例 Given nums = [2, 7, 11, 15], target = 9,
Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].</description>
    </item>
    
  </channel>
</rss>