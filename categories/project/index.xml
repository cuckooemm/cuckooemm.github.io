<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>project on Cuckooemm&#39;s Blog</title>
    <link>https://cuckooemm.xyz/categories/project/</link>
    <description>Recent content in project on Cuckooemm&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 30 Jul 2019 23:23:00 +0800</lastBuildDate>
    
	<atom:link href="https://cuckooemm.xyz/categories/project/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>微服务改造 - 1</title>
      <link>https://cuckooemm.xyz/2019/july/microservice-campus-1/</link>
      <pubDate>Tue, 30 Jul 2019 23:23:00 +0800</pubDate>
      
      <guid>https://cuckooemm.xyz/2019/july/microservice-campus-1/</guid>
      <description>校园墙微服务改造 想法 自从完成之前的校园墙APP的前后端开发后，已经懒得在之前基础上进行增加功能和升级。原因除了自身毕业后没啥动力继续开发，还有便是单体架构的自身缺陷了，因此便有了把这个项目改造成微服务的想法。
之前项目已从阿里云下线，APP内域名已到期懒得重新编译，(也没人用)所以下线了服务端节省资源。
本次改造的主要目的是通过这次改造认识后端开发中所可能产生的各种问题和与之对应的优雅的处理方案。
目标 实现一个完整的微服务项目  构建微服务 Redis集群 配置下发 熔断，限流，负载均衡… 链路追踪，日志收集与展示 消息队列 单元测试 服务docker化 用k8s做服务注册与发现 使用k8s部署，并配置服务的水平扩展 持续集成  框架 经过几个框架的对比，最终选择了go-micro框架。
模块 初步定为以下微服务模块:
1.User:  为其他模块提供用户信息与身份认证  2.OSS:  自建一个阿里云OSS精简版  3.动态:  校园动态  4.短视频:  接触一下音视频的知识  5.PUSH  提供消息推送  6.评论  为其他模块添加评论的支持  如果上面完成则进行下面的尝试
1.IM 2.直播</description>
    </item>
    
  </channel>
</rss>